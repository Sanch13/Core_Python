import binascii
import zlib

# Циклический избыточный код (англ. Cyclic redundancy check, CRC) — алгоритм
# нахождения контрольной суммы, предназначенный для проверки целостности данных. CRC является
# практическим приложением помехоустойчивого кодирования, основанным на определённых
# математических свойствах циклического кода.

# Функция crc32() модуля zlib вычисляет контрольную сумму данных CRC (Cyclic Redundancy Check).
# Результатом является 32-разрядное целое число без знака.

# zlib.crc32(data[, value])
# Параметры:
# data - данные в bytes,
# value - начальное значение контрольной суммы.

# Если значение value присутствует, то оно используется в качестве начального значения
# контрольной суммы, в противном случае используется значение по умолчанию 0. Передача значения
# позволяет вычислить текущую контрольную сумму по объединению нескольких входов.

data_1 = b'Hello world'
crc32_1 = zlib.crc32(data_1)

data_2 = 'Hello world'
crc32_2 = zlib.crc32(data_2.encode('utf-8'))

print(crc32_1, crc32_2, type(crc32_1), crc32_1 == crc32_2)
# 2346098258 2346098258 <class 'int'>  True
